from flask import Flask, jsonify, render_template, request, send_file
from markov import MarkovChain as MC, MarkovWord
# from os import environ


app = Flask(__name__)
# app.secret_key = environ['APP_SECRET']

# Markov chains
AUTHORS = {
	'austen': MC.load('./training_data/pickle/austen2.pickle'),
	'norton': MC.load('./training_data/pickle/norton2.pickle'),
	'shakespeare': MC.load('./training_data/pickle/shakespeare2.pickle'),
	'wilde': MC.load('./training_data/pickle/wilde2.pickle'),
}


@app.route('/')
def index():
	"""Render the home page."""

	return render_template('index.html')


@app.route('/markov')
def markov():
	"""Render the Markov chain page."""

	return render_template('markov.html')


@app.route('/api/suggest/<author>.json', methods=['POST'])
def suggest(author):
	"""Return a list of words based on author's Markov chain."""

	author_mc = AUTHORS.get(author.lower())
	if author_mc is None:
		return jsonify({'success': False, 'error': 'Author not found'})

	key = tuple(request.json.get('key'))
	print(key)

	try:
		words = author_mc.get_words(key=key)
	except KeyError:
		return jsonify({'success': False, 'error': 'Key not found'})
	
	return jsonify({'success': True, 'words': words})


@app.route('/api/generate/<author>.json', methods=['POST'])
def generate(author):
	"""Return a random string generated by author's Markov chain."""

	author_mc = AUTHORS.get(author.lower())
	if author_mc is None:
		return jsonify({'success': False, 'error': 'Author not found'})

	words = request.json.get('words', True)
	num = request.json.get('num', 15)

	if words:
		text = author_mc.gen_words(num_words=num)
	else:
		text = author_mc.gen_chars(num_chars=num)

	return jsonify({'success': True, 'text': text})


@app.route('/favicon.ico')
def favicon():
	"""Send the favicon file."""

	return send_file('./static/img/favicon.ico')


if __name__ == '__main__':
	app.run(host='0.0.0.0', port=5001, debug=True)